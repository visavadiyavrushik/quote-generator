{"version":3,"sources":["App.js","index.js"],"names":["Quotable","useState","data","setData","loading","setLoading","updateQuote","a","fetch","response","json","statusCode","statusMessage","ok","Error","console","error","content","React","useEffect","className","Card","Body","author","title","Footer","Button","variant","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAIe,SAASA,IAAY,IAAD,EACTC,mBAAS,MADA,mBAC1BC,EAD0B,KACpBC,EADoB,OAEHF,mBAAS,MAFN,mBAE1BG,EAF0B,KAEjBC,EAFiB,cAIlBC,IAJkB,2EAIjC,oCAAAC,EAAA,6DACEF,GAAW,GADb,kBAG2BG,MAAM,kCAHjC,cAGUC,EAHV,gBAIyDA,EAASC,OAJlE,mBAIYC,EAJZ,EAIYA,WAAYC,EAJxB,EAIwBA,cAAkBV,EAJ1C,8CAKSO,EAASI,GALlB,uBAK4B,IAAIC,MAAJ,UAAaH,EAAb,YAA2BC,IALvD,QAMIT,EAAQD,GACRG,GAAW,GAPf,kDASIU,QAAQC,MAAR,MACAb,EAAQ,CAAEc,QAAS,iCACnBZ,GAAW,GAXf,2DAJiC,sBAuBjC,OAJAa,IAAMC,WAAU,WACdb,MACC,IAEEJ,EASH,qBAAKkB,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,KAAN,UACE,4BAAYF,UAAU,kBAAtB,SACGhB,EACC,2DAEA,qCACE,mCAAMF,EAAKe,QAAX,QACCf,EAAKqB,QACJ,wBAAQH,UAAU,oBAAlB,SACE,uBAAMI,MAAM,eAAZ,UACG,IACD,6CAFF,SAEiCtB,EAAKqB,mBAQlD,cAACF,EAAA,EAAKI,OAAN,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAStB,EAAnC,8BA/BU,K,MCrBpBuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dedc1204.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nexport default function Quotable() {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(null);\n\n  async function updateQuote() {\n    setLoading(true);\n    try {\n      const response = await fetch(\"https://api.quotable.io/random\");\n      const { statusCode, statusMessage, ...data } = await response.json();\n      if (!response.ok) throw new Error(`${statusCode} ${statusMessage}`);\n      setData(data);\n      setLoading(false);\n    } catch (error) {\n      console.error(error);\n      setData({ content: \"Opps... Something went wrong\" });\n      setLoading(false);\n    }\n  }\n\n  React.useEffect(() => {\n    updateQuote();\n  }, []);\n\n  if (!data) return null;\n\n  // function downloadQuote() {\n  //   // const saveFile = () => {\n  //   saveAs(data.content);\n  //   // };\n  // }\n\n  return (\n    <div className=\"App\">\n      <Card>\n        <Card.Body>\n          <blockquote className=\"blockquote mb-0\">\n            {loading ? (\n              <p>Generating New Quote .... </p>\n            ) : (\n              <>\n                <p>\" {data.content} \"</p>\n                {data.author && (\n                  <footer className=\"blockquote-footer\">\n                    <cite title=\"Source Title\">\n                      {\" \"}\n                      <span>Author : </span> &nbsp; {data.author}\n                    </cite>\n                  </footer>\n                )}\n              </>\n            )}\n          </blockquote>\n        </Card.Body>\n        <Card.Footer>\n          <Button variant=\"primary\" onClick={updateQuote}>\n            New Quote\n          </Button>\n          {/* <Button variant=\"primary\" onClick={downloadQuote}>\n            Download\n          </Button> */}\n        </Card.Footer>\n      </Card>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}